kind : pipeline
name : CI
type : docker

trigger :
  branch :
    - main
    - develop
    - feature/*
  event :
    - push

volumes :
  - name : m2cache
    host :
      path : /app/.m2
steps :

  - name : build
    image : docker-registry.c2a2.com/ujar/maven:3-openjdk-17-slim
    pull : if-not-exists
    volumes :
      - name : m2cache
        path : /root/.m2
    environment :
      KAFKA_BOOTSTRAP_SERVERS : kafka:9092
      KAFKA_SCHEMA_REGISTRY_URL : http://schema-registry:8081
      DEPLOYER_USERNAME :
        from_secret : DEPLOYER_USERNAME
      DEPLOYER_PASSWORD :
        from_secret : DEPLOYER_PASSWORD
      SONAR_HOST :
        from_secret : SONAR_HOST
      SONAR_TOKEN :
        from_secret : SONAR_TOKEN
    commands :
      - mvn clean compile test-compile -P default -B  --file pom.xml -s ../maven-settings.xml -Ddeployer.username=$DEPLOYER_USERNAME -Ddeployer.password=$DEPLOYER_PASSWORD
      - mvn pmd:check -P default -B --file pom.xml -s ../maven-settings.xml -Ddeployer.username=$DEPLOYER_USERNAME -Ddeployer.password=$DEPLOYER_PASSWORD
      - mvn com.github.spotbugs:spotbugs-maven-plugin:check -P default -Dspotbugs.xmlOutput=true -Dspotbugs.failOnError=true -Dspotbugs.includeTests=true  --file pom.xml -s ../maven-settings.xml -Ddeployer.username=$DEPLOYER_USERNAME -Ddeployer.password=$DEPLOYER_PASSWORD
      - mvn org.jacoco:jacoco-maven-plugin:prepare-agent package org.jacoco:jacoco-maven-plugin:report sonar:sonar -P default -Dsonar.host.url=$SONAR_HOST -Dsonar.login=$SONAR_TOKEN -Dsonar.projectKey=ujar-org:bs-msg-kafka-consuming-hello -Dsonar.projectName=ujar-org:bs-msg-kafka-consuming-hello --batch-mode  --file pom.xml -s ../maven-settings.xml -Ddeployer.username=$DEPLOYER_USERNAME -Ddeployer.password=$DEPLOYER_PASSWORD
    when :
      branch :
        include :
          - feature/*
          - develop
          - main

  - name : publish-snapshot-package
    depends_on :
      - build
    image : docker-registry.c2a2.com/ujar/maven:3-openjdk-17-slim
    pull : if-not-exists
    volumes :
      - name : m2cache
        path : /root/.m2
    environment :
      DEPLOYER_USERNAME :
        from_secret : DEPLOYER_USERNAME
      DEPLOYER_PASSWORD :
        from_secret : DEPLOYER_PASSWORD
    commands :
      - mvn deploy -P default -DskipTests=true -Dcheckstyle.skip=true -s ../maven-settings.xml -Ddeployer.username=$DEPLOYER_USERNAME -Ddeployer.password=$DEPLOYER_PASSWORD
    when :
      branch :
        include :
          - feature/*
          - develop
          - main

  - name : publish-release-package
    depends_on :
      - build
    image : docker-registry.c2a2.com/ujar/maven:3-openjdk-17-slim
    pull : if-not-exists
    volumes :
      - name : m2cache
        path : /root/.m2
    environment :
      DEPLOYER_USERNAME :
        from_secret : DEPLOYER_USERNAME
      DEPLOYER_PASSWORD :
        from_secret : DEPLOYER_PASSWORD
    commands :
      - mvn deploy -P default -DskipTests=true -Dcheckstyle.skip=true -s ../maven-settings.xml -Ddeployer.username=$DEPLOYER_USERNAME -Ddeployer.password=$DEPLOYER_PASSWORD
    when :
      event : tag

  - name : docker-build-dev-image
    depends_on :
      - publish-snapshot-package
    image : plugins/docker
    settings :
      dockerfile : Dockerfile
      context : ./
      storage_driver : vfs
      username :
        from_secret : DOCKER_USERNAME
      password :
        from_secret : DOCKER_PASSWORD
      repo : docker-registry.c2a2.com/ujar/bs-msg-kafka-consuming-hello
      registry : docker-registry.c2a2.com
      tags :
        - latest
    when :
      branch :
        include :
          - feature/*
          - develop
          - main

services :
  - name : zookeeper
    image : docker.io/bitnami/zookeeper:3.8
    environment :
      ZOOKEEPER_CLIENT_PORT : 2181
      ZOOKEEPER_TICK_TIME : 2000
      ALLOW_ANONYMOUS_LOGIN : yes

  - name : kafka
    image : docker.io/bitnami/kafka:3.3
    environment :
      KAFKA_BROKER_ID: 1
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,PLAINTEXT_KAFKA://:9091
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://127.0.0.1:9092,PLAINTEXT_KAFKA://kafka:9091
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: true
      ALLOW_PLAINTEXT_LISTENER: yes
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_KAFKA:PLAINTEXT
